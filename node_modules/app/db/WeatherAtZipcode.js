var mongoose = require('app/db/mongoose_connect.js');
var Schema = mongoose.Schema;
var ObjectId = Schema.Types.ObjectId;

var customSchema = new Schema({
        zipcode: {type: String, required: true, unique: true},
        last_updated_at: {type: Date},
        _current_forecast : {type: ObjectId, ref: "Forecast"},
        _past_forecasts : [{type: ObjectId, ref: "Forecast"}]

    },
    {timestamps: {createdAt: 'dateCreated', updatedAt: 'dateUpdated'}}
);

customSchema.statics.findForZipcode = function(zipcode, callback){
    this.findOne({"zipcode" : zipcode}).populate("_current_forecast").exec(function(err, weather){
       if(err){
           console.log(err);
           callback(err, null);
       }
        else{
           console.log(weather);
           callback(null, weather);
       }
    });
};

customSchema.statics.createForZipcode = function(zipcode, callback){
    var weather = new this({
        "zipcode": zipcode
    });

    weather.save(function(err, _weather){
       if(err){
           console.log(err);
           callback(err, _weather);
       }
        else{
           callback(null, _weather);
       }
    });
};

customSchema.statics.findOrCreateForZipcode = function(zipcode, callback){
  this.findForZipcode(zipcode, function(err, weather){
    if(err){
        console.log(err);
        callback(err, null);
    }
      else if (weather){
        callback(err, weather);
    }
      else{
        this.createForZipcode(zipcode, callback);
    }

  });
};

customSchema.virtual('').get(function () {
});


customSchema.pre("save", function (next) {
    next();
});

customSchema.post("init", function (doc) {

});


module.exports = mongoose.model('WeatherAtZipcode', customSchema);