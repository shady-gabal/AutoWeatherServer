//exports mongoose connected to db

//to enable .env file to be read into process.env. Make sure to add .env to .gitignore

var mongoose = require('mongoose');
var uriUtil = require('mongodb-uri');
var Globals = require('app/helpers/Globals');

/*
 * Mongoose by default sets the auto_reconnect option to true.
 * We recommend setting socket options at both the server and replica set level.
 * We recommend a 30 second connection timeout because it allows for
 * plenty of time in most operating environments.
 */
var options = { server: { socketOptions: { keepAlive: 1, connectTimeoutMS: 30000 } },
    replset: { socketOptions: { keepAlive: 1, connectTimeoutMS : 30000 } } };

var mongooseUri, mongodbUri;

//for local dev
//if (process.env.USE_LOCAL_DB > 0 && !Globals.heroku && !Globals.test){
//    console.log('connecting to local mongodb...');
//    mongooseUri = "mongodb://127.0.0.1:27017/autoweatherdb";
//    mongodbUri = mongooseUri;
//    mongoose.connect(mongooseUri, options);
//}
//
//else{
//    if (Globals.development){
//        mongodbUri = process.env.MONGOLAB_URI;
//    }
//    else if (Globals.test){
//        mongodbUri = process.env.MONGOLAB_URI_TEST;
//
//    }
//    else if (Globals.production){
//        mongodbUri = process.env.MONGOLAB_URI_PROD;
//    }
//    else{
//        throw new Error("No node environment specified");
//    }

    mongodbUri = process.env.MONGOLAB_URI;
    mongooseUri = uriUtil.formatMongoose(mongodbUri);

    //for remote dev
    console.log('connecting to remote ' + Globals.env + ' mongodb...');
    mongoose.connect(mongooseUri, options);
//}

var db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));

db.once('open', function(){
    console.log('connected to db');
});

module.exports = mongoose;
module.exports.mongooseURI = mongooseUri;
module.exports.mongoURI = mongodbUri;
